//************************ */
//Universidad del Valle de Guatemala
//BE3029 - Electrónica Digital 2
//Javier de León
//************************* */
//****************************** */
//Librerías
//******************************** */
#include <Arduino.h>
#include <stdint.h>

//****************************** */
//Definiciones
//******************************** */
#define LED_B 15
#define LED_Y 2
#define LED_R 5
#define LED_O 19
#define BTNMAS 13
#define BTNMENOS 12
#define BTNCONT 27

// put function declarations here:


uint8_t estadoBTNMAS = 0;
uint8_t estadoBTNMENOS = 0;
uint8_t estadoBTNCONT = 0;
typedef enum estados {s0, s1, s2, s3} estados; //Definición de los estados del sistema
estados current = s0; //Variable que nombra el estado actual
estados next = s0; //Variable que nombra el estado siguiente

const long interval = 500; //Nombrar el intervalo para que la luz parpadeé en milisegundos
unsigned long previousMillis = 0; //Nombrar el periodo de actuación del sistema
uint8_t num = 0;

void setup() {
  // put your setup code here, to run once:
  pinMode(BTNMAS, INPUT_PULLUP);
  pinMode(BTNMENOS, INPUT_PULLDOWN);
  pinMode(BTNCONT, INPUT);
  pinMode(LED_B, OUTPUT);
  pinMode(LED_Y, OUTPUT);
  pinMode(LED_R, OUTPUT);
  pinMode(LED_O, OUTPUT);

}

void loop() {
  // put your main code here, to run repeatedly:
  uint8_t suma = digitalRead(BTNMAS);
  uint8_t resta = digitalRead(BTNMENOS);
  uint8_t cont = digitalRead(BTNCONT);
  

  //Cambios de estado de acuerdo a las entradas
  switch(current){
    //Se detecta un intruso y se cambia al estado s1
    case s0:
    if (suma == HIGH) {
      ++num;
      next = s1;
     }if (resta == HIGH){
      num = 3;
      next = s3;
     }else{
      next = s0;
     }
    break;
    //Se detecta la señal de la segunda máquina en s1, se cambia a s0.
    case s1:
      if (suma == HIGH) {
        ++num;
        next = s2;
     }if (resta == HIGH){
      --num;
      next = s0;
     }else{
      next = s1;
     }
    break;
    case s2:
      if (suma == HIGH) {
      ++num;
      next = s3;
     }if (resta == HIGH){
      --num;
      next = s1;
     }else{
      next = s2;
     }
    break;
    case s3:
      if (suma == HIGH) {
      num = 0;
      next = s0;
     }if (resta == HIGH){
      --num;
      next = s2;
     }else{
      next = s3;
     }
    break;
  
  }
//Salidas de acuerdo al estado actual
switch(current){
    case s0:
      digitalWrite(LED_B, HIGH);
      digitalWrite(LED_Y, LOW);
      digitalWrite(LED_R, LOW);
      digitalWrite(LED_O, LOW);
    break;

    case s1:
      digitalWrite(LED_B, LOW);
      digitalWrite(LED_Y, HIGH);
      digitalWrite(LED_R, LOW);
      digitalWrite(LED_O, LOW);
    break;

    case s2:
      digitalWrite(LED_B, LOW);
      digitalWrite(LED_Y, LOW);
      digitalWrite(LED_R, HIGH);
      digitalWrite(LED_O, LOW);
    break;

    case s3:
      digitalWrite(LED_B, LOW);
      digitalWrite(LED_Y, LOW);
      digitalWrite(LED_R, LOW);
      digitalWrite(LED_O, HIGH);
    break;
}

}

// put function definitions here:
